{
  "java": {
    "BasicChart.java": "\npublic class BasicChart {\n\tpublic static void main(String args[]){\n\t\tString option = \"{\"\n\t\t\t+ \"\\\"xAxis\\\": {\"\n\t\t\t\t+ \"\\\"type\\\": \\\"category\\\",\"\n\t\t\t\t+ \"\\\"data\\\": [\\\"Mon\\\", \\\"Tue\\\", \\\"Wed\\\", \\\"Thu\\\", \\\"Fri\\\", \\\"Sat\\\", \\\"Sun\\\"]\"\n\t\t\t+ \"},\"\n\t\t\t+ \"\\\"yAxis\\\":{\"\n\t\t\t\t+ \"\\\"type\\\": \\\"value\\\"\"\n\t\t\t+ \"},\"\n\t\t\t+ \"\\\"series\\\": [{\"\n\t\t\t\t+ \"\\\"data\\\": [820, 932, 901, 934, 1290, 1330, 1320],\"\n\t\t\t\t+ \"\\\"type\\\": \\\"line\\\"\"\n\t\t\t+ \"}]\"\n\t\t+ \"}\";\n\t\tJarvis.dom.clear(\"#ui\");\n\t\tJarvis.dom.create(\"canvas\", \"my-chart\", \"#ui\");\n\t\tJarvis.dom.attr(\"#my-chart\", \"width\", 500);\n\t\tJarvis.dom.attr(\"#my-chart\", \"height\", 300);\n\t\tJarvis.chart.draw(\"#my-chart\", option);\n\t}\n}\n",
    "DomExample.java": "// declare an interface with the callback methods, so you can use on more than one class and just refer to the interface\ninterface CallBack {\n  void methodToCallBack();\n}\n\n//class that implements the method to callback defined in the interface\nclass CallBackImpl implements CallBack {\n  public void callback() {\n    System.out.println(\"Clicked\");\n  }\n}\n\npublic class DomExample {\n\tpublic static void main(String args[]){\n\t\tJarvis.dom.clear(\"#ui\");\n\t\tJarvis.dom.create(\"label\", \"l1\", \"#ui\");\n\t\tJarvis.dom.set(\"#l1\", \"innerHTML\", \"Pick date/time:\");\n\t\tJarvis.dom.create(\"input\", \"i1\", \"#ui\");\n\t\tJarvis.dom.attr(\"#i1\", \"type\", \"datetime-local\");\n\t\tSystem.out.println(Jarvis.dom.attr(\"#i1\", \"type\"));\n\t\t// button\n\t\tJarvis.dom.create(\"button\", \"b1\", \"#ui\");\n\t\tJarvis.dom.set(\"#b1\", \"innerHTML\", \"click me\");\n\t\tCallBack callBack = new CallBackImpl();\n\t\tJarvis.dom.on(\"#b1\", \"click\", callBack);\n\t}\n}\n",
    "HelloWorld.java": "public class HelloWorld {\n\tpublic static void main(String args[]){\n\t\tSystem.out.println(\"Hello World!\");\n\t}\n}\n",
    "ProcLoop.java": "// declare an interface with the callback methods, so you can use on more than one class and just refer to the interface\ninterface CallBack {\n  void methodToCallBack();\n}\n\n//class that implements the method to callback defined in the interface\nclass CallBackImpl implements CallBack {\n  public void callback(Number index) {\n    System.out.println(\"Index is \" + index);\n  }\n}\n\npublic class ProcLoop {\n\tpublic static void main(String args[]){\n\t\tCallBack callBack = new CallBackImpl();\n\t\tJarvis.proc.loop(10, 1, callBack);\n\t}\n}\n"
  },
  "py": {
    "APIExample.py": "import api\nimport dom\n\nurl = '//quotesondesign.com/wp-json/posts' \\\n\t+ '?filter[orderby]=rand&filter[posts_per_page]=1'\n\ndef api_cb(res):\n\tdom.set('#q', 'innerHTML', res[0]['content'] \\\n\t+ ' - ' + res[0]['title'])\n\ndef btn_click():\n\tapi.get(url, api_cb)\n\ndef init():\n\tdom.clear('#ui')\n\tdom.create('button', 'b1', '#ui')\n\tdom.create('div', 'q', '#ui')\n\tdom.set('#b1', 'innerHTML', 'get quote')\n\tdom.on('#b1', 'click', btn_click)\n\ninit()\n",
    "BasicChart.py": "import chart\nimport dom\n\noption = {\n\t'xAxis': {\n\t\t'type': 'category',\n\t\t'data': ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n\t},\n\t'yAxis':{\n\t\t'type': 'value'\n\t},\n\t'series': [{\n\t\t'data': [820, 932, 901, 934, 1290, 1330, 1320],\n\t\t'type': 'line'\n\t}]\n}\n\ndef init():\n\tdom.clear('#ui')\n\tdom.create('canvas', 'my-chart', '#ui')\n\tdom.attr('#my-chart', 'width', 500)\n\tdom.attr('#my-chart', 'height', 300)\n\tchart.draw('#my-chart', option)\n\ninit()\n",
    "ChartTimedExample.py": "from datetime import datetime\nimport chart\nimport proc\nimport dom\nimport random\n\ndef shift(seq, n):\n  n = n % len(seq)\n  return seq[n:] + seq[:n]\n\ndef genData(max = 2000):\n\tvalue = round(random.uniform(0 if max - 200 < 0 else max - 200, max + 200), 2)\n\td = datetime.now()\n\tfdate = str(d.year) + '/' + str(d.month) + '/' + str(d.day) \\\n\t\t+ ' ' + str(d.hour) + ':' \\\n\t\t+ ('0' if d.minute < 10 else '') + str(d.minute) \\\n\t\t+ ':' + ('0' if d.second < 10 else '') + str(d.second)\n\tprint fdate, value\n\tres = {\n\t\t'name': str(d),\n\t\t'value': [fdate, value]\n\t}\n\treturn res\n\n#data = map(prepData, [820, 932, 901, 934, 1290, 1330, 1320])\ndata = []\n\noption = {\n\t'xAxis': {\n    'type': 'time',\n    'splitLine': {\n        'show': False\n    }\n\t},\n\t'yAxis':{\n\t\t'type': 'value'\n\t},\n\t'series': [{\n\t\t'data': data,\n\t\t'type': 'line'\n\t}]\n}\n\ndef prep_ui():\n\tdom.clear('#ui')\n\t# price value\n\tdom.create('label', 'l1', '#ui')\n\tdom.set('#l1', 'innerHTML', 'Buy price:')\n\tdom.create('input', 'i1', '#ui')\n\tdom.attr('#i1', 'type', 'number')\n\tdom.attr('#i1', 'style', 'width: 100px')\n\tdom.set('#i1', 'value', 1200)\n\t# start sim\n\tdom.create('button', 'b1', '#ui')\n\tdom.set('#b1', 'innerHTML', 'Start')\n\t# line break\n\tdom.create('br', 'br1', '#ui')\n\n\ndef init_chart():\n\tdom.create('canvas', 'my-chart', '#ui')\n\tdom.attr('#my-chart', 'width', 500)\n\tdom.attr('#my-chart', 'height', 300)\n\treturn chart.draw('#my-chart', option)\n\nprep_ui()\nupdate = init_chart()\n\nready_to_buy = False\n\ndef loop_fun( index ):\n\tglobal ready_to_buy\n\tif ready_to_buy == True:\n\t\treturn False\n\t# get buy value\n\tbuy_value = int(dom.get('#i1', 'value'))\n\t# generate data item\n\tif len(data) == 0:\n\t\titem = genData(300)\n\telse:\n\t\titem = genData((data[len(data) - 1]['value'][1] * 12 + index * 600 + random.uniform(-index * 150, index * 150)) / 15)\n\tif item['value'][1] >= buy_value:\n\t\tready_to_buy = True\n\t\titem['label'] = {\n\t    'normal': {\n\t\t\t\t'show': True,\n\t\t\t\t'cursor': 'pointer',\n\t      'formatter': 'Buy now',\n\t      'borderRadius': 4,\n\t      'backgroundColor': '#333',\n\t      'align': 'center',\n\t      'color': '#eee',\n\t      'padding': 10\n\t    },\n      'emphasis': {\n        'padding': 12\n      }\n\t  }\n\tdata.append(item)\n\tupdate({\n\t\t'series': [{\n\t\t\t'data': data,\n\t\t\t'type': 'line'\n\t\t}]\n\t})\n\ndef start_sim ():\n\tproc.loop(30, 1, loop_fun)\n\ndef item_bought():\n\tprint 'item bought'\n\ndom.on('#b1', 'click', start_sim)\n",
    "CoinMarketCap.py": "import dom\nimport api\n\nurl = 'https://api.coinmarketcap.com/v2/ticker/'\n\ndef api_cb(res):\n\tcurrency = dom.get('#s2', 'value')\n\tdom.set('#current-price', 'innerHTML', \\\n\t\tres['data']['quotes'][currency]['price'])\n\ndef callback():\n\tid = dom.get('#s1', 'value')\n\tcurrency = dom.get('#s2', 'value')\n\tapi.get(url + id + '/?convert=' + currency, api_cb)\n  # print \"clicked\"\n\ndef add_option (el, value, text):\n\tdom.create('option', 'o' + value, el)\n\tdom.set('#o' + value, 'innerHTML', text)\n\tdom.attr('#o' + value, 'value', value)\n\ndef prep_ui():\n\tdom.clear('#ui')\n\t# crypto\n\tdom.create('label', 'l1', '#ui')\n\tdom.set('#l1', 'innerHTML', 'Crypto:')\n\tdom.create('select', 's1', '#ui')\n\tadd_option('#s1', '1', 'Bitcoin')\n\tadd_option('#s1', '1027', 'Ethereum')\n\t# currency\n\tdom.create('label', 'l2', '#ui')\n\tdom.set('#l2', 'innerHTML', 'Currency:')\n\tdom.create('select', 's2', '#ui')\n\tadd_option('#s2', 'USD', 'USD')\n\tadd_option('#s2', 'EUR', 'EUR')\n\t# button\n\tdom.create('button', 'b1', '#ui')\n\tdom.set('#b1', 'innerHTML', 'Get price')\n\tdom.on('#b1', 'click', callback)\n\t# current price\n\tdom.create('div', 'current-price', '#ui')\n\nprep_ui()\n",
    "DomExample.py": "import dom\ndef callback():\n  print \"clicked\"\n\ndom.clear('#ui')\ndom.create('label', 'l1', '#ui')\ndom.set('#l1', 'innerHTML', 'Pick date/time:')\ndom.create('input', 'i1', '#ui')\ndom.attr('#i1', 'type', 'datetime-local')\nprint dom.attr('#i1', 'type')\n# button\ndom.create('button', 'b1', '#ui')\ndom.set('#b1', 'innerHTML', 'click me')\ndom.on('#b1', 'click', callback)\n",
    "HelloWorld.py": "print \"Hello World!\"\n",
    "ProcLoop.py": "import proc\n\ndef print_msg ( index ):\n\tprint 'index is:', index\n\nproc.loop(10, 1, print_msg)\n"
  }
}